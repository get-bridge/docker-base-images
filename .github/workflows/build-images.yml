name: Build Images

env:
  ECR_AWS_DEFAULT_REGION: us-east-2
  ECR_REGISTRY: 127178877223.dkr.ecr.us-east-2.amazonaws.com
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  CI_BUILDX_CACHE: true

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request_target:
    types: [labeled]
  workflow_dispatch: {}

jobs:
  build-core-images:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'dependencies') || github.event_name == 'push'
    strategy:
      # Build the core images first using the matrix strategy, from there, we will get a list
      # of other docker images to build concurrently.
      matrix:
        core-paths: ["core/jammy/docker-bake.hcl", "core/jammy-fat/docker-bake.hcl"]
    steps:
      # If you want to set an environment variable equal to the result of a script
      # you must do so via a run step, vs the `env: ` workflow syntax. Additinally see
      # https://docs.github.com/en/actions/learn-github-actions/environment-variables#passing-values-between-steps-and-jobs-in-a-workflow
      - name: set PWD environt variable
        run:  echo "PWD=$(pwd)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Checkout Bridge Actions
        uses: actions/checkout@v3
        with:
          repository: get-bridge/actions
          token: ${{ secrets.GIT_HUB_TOKEN }}
          path: .github/actions

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.TRUSS_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.TRUSS_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.ECR_AWS_DEFAULT_REGION }}

      - name: Cache Docker layers
        if: ${{ env.CI_BUILDX_CACHE }}
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.core-paths }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.core-paths }}-buildx-

      - name: Build and push
        uses: docker/bake-action@v2.0.0
        with:
          pull: true
          push: true
          files: ${{ matrix.core-paths }}

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache(docker layers)
        if: ${{ env.CI_BUILDX_CACHE }}
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  set_outputs:
    runs-on: ubuntu-latest
    needs: build-core-images
    if: contains(github.event.pull_request.labels.*.name, 'dependencies') || github.event_name == 'push'
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - id: set-matrix
        run: bundle exec rake ci:set-matrix

  build-all-images:
    runs-on: ubuntu-latest
    needs: set_outputs
    if: contains(github.event.pull_request.labels.*.name, 'dependencies') || github.event_name == 'push'
    strategy:
      max-parallel: 4
      matrix:
        ci-files: ${{ fromJSON(needs.set_outputs.outputs.matrix) }}
    steps:
      - name: set PWD environt variable
        run:  echo "PWD=$(pwd)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
      - name: Checkout Bridge Actions
        uses: actions/checkout@v3
        with:
          repository: get-bridge/actions
          token: ${{ secrets.GIT_HUB_TOKEN }}
          path: .github/actions

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.TRUSS_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.TRUSS_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.ECR_AWS_DEFAULT_REGION }}

      - name: Cache Docker layers
        if: ${{ env.CI_BUILDX_CACHE }}
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-${{ matrix.ci-files }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ci-files }}-buildx-

      - name: Build and push
        uses: docker/bake-action@v2
        with:
          pull: true
          push: true
          files: ${{ matrix.ci-files }}

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache(docker layers)
        if: ${{ env.CI_BUILDX_CACHE }}
        run: |
          rm -rf /tmp/.buildx-cache || true
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache || true
