name: Build Images

on:
  push:
    branches-ignore:
      - "dependabot/**"
    paths-ignore:
      - ".github/CODEOWNERS"
  pull_request_target:
    types: [labeled]
  workflow_dispatch: {}

env:
  ECR_AWS_DEFAULT_REGION: us-east-2
  ECR_REGISTRY: 127178877223.dkr.ecr.us-east-2.amazonaws.com
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'dependencies') || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    outputs:
      core_matrix: ${{ steps.set-matrix.outputs.core_matrix }}
      non_core_matrix: ${{ steps.set-matrix.outputs.non_core_matrix }}
    steps:
      - uses: actions/checkout@v3.5.1
        with:
          persist-credentials: false

      - uses: ruby/setup-ruby@v1.146.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Set matrix output
        id: set-matrix
        run: |
          echo "core_matrix=$(bundle exec rake ci:set-matrix:core)" >> $GITHUB_OUTPUT
          echo "non_core_matrix=$(bundle exec rake ci:set-matrix:non-core)" >> $GITHUB_OUTPUT

  build-core-images:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'dependencies') || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    needs:
      - set-matrix
    strategy:
      fail-fast: false
      # Build the core images first using the matrix strategy, from there, we
      # will get a list of other docker images to build concurrently.
      matrix: ${{ fromJSON(needs.set-matrix.outputs.core_matrix) }}
    steps:
      # If you want to set an environment variable equal to the result of a script
      # you must do so via a run step, vs the `env: ` workflow syntax. Additinally see
      # https://docs.github.com/en/actions/learn-github-actions/environment-variables#passing-values-between-steps-and-jobs-in-a-workflow
      - name: set PWD environment variable
        run:  echo "PWD=$(pwd)" >> $GITHUB_ENV

      - uses: actions/checkout@v3.5.1
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          buildkitd-flags: --debug
          install: true

      - name: Login to ECR
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.TRUSS_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.TRUSS_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.ECR_AWS_DEFAULT_REGION }}

      - name: Build and push
        uses: docker/bake-action@v2.3.0
        with:
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          files: ${{ matrix.bake }}
          set: |
            *.cache-from=${{ fromJSON(matrix.cache-from) }}
            *.cache-to=${{ fromJSON(matrix.cache-to) }}

  build-all-images:
    runs-on: ubuntu-latest
    needs:
      - build-core-images
      - set-matrix
    if: contains(github.event.pull_request.labels.*.name, 'dependencies') || github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.set-matrix.outputs.non_core_matrix) }}
    steps:
      - name: set PWD environment variable
        run: echo "PWD=$(pwd)" >> $GITHUB_ENV

      - uses: actions/checkout@v3.5.1
        with:
          persist-credentials: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          buildkitd-flags: --debug
          install: true

      - name: Login to ECR
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.TRUSS_AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.TRUSS_AWS_SECRET_ACCESS_KEY }}
        env:
          AWS_REGION: ${{ env.ECR_AWS_DEFAULT_REGION }}

      - name: Build and push
        uses: docker/bake-action@v2.3.0
        with:
          pull: true
          push: ${{ github.ref == 'refs/heads/main' }}
          files: ${{ matrix.bake }}
          set: |
            *.cache-from=${{ fromJSON(matrix.cache-from) }}
            *.cache-to=${{ fromJSON(matrix.cache-to) }}
